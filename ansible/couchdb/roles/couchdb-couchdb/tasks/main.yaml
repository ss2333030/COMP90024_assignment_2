---
- name: Create a docker volume
  become: true
  community.docker.docker_volume:
    name: "{{ docker_volume.name }}"
    state: present
  register: volume_result

- name: Print out debugging information
  ansible.builtin.debug:
    msg: "{{ volume_result }}"

- name: Create a couchdb container
  become: true
  community.docker.docker_container:
    name: "{{ docker_container.name }}"
    image: "{{ docker_container.base_image }}"
    mounts:
      - type: "{{ docker_volume.type }}"
        target: "{{ docker_volume.target }}"
        source: "{{ docker_volume.name }}"
    env:
      COUCHDB_USER: "{{ docker_container.env.user }}"
      COUCHDB_PASSWORD: "{{ docker_container.env.password }}"
      COUCHDB_SECRET: "{{ docker_container.env.secret }}"
      ERL_FLAGS: "-setcookie \"{{ docker_container.env.secret }}\" -name \"couchdb@{{ ansible_default_ipv4.address | string }}\""
    ports: "{{ docker_container.ports }}"
    detach: true
    state: started

- name: Wait for containers
  ansible.builtin.wait_for:
    host: "{{ item }}"
    port: 5984
  loop: "{{ groups['db_servers'] }}"
  when: ansible_nodename == "node-1"

- name: Configure cluster - step 1
  become: true
  ansible.builtin.uri:
    url: "http://{{ ansible_default_ipv4.address | string }}:5984/_cluster_setup"
    user: "{{ docker_container.env.user }}"
    password: "{{ docker_container.env.password }}"
    force_basic_auth : true
    method: POST
    status_code: 201
    body_format: json
    body: "{\"action\": \"enable_cluster\", \"bind_address\":\"0.0.0.0\",\"username\": \"{{ docker_container.env.user }}\", \"password\":\"{{ docker_container.env.password }}\", \"port\": \"5984\",\"remote_node\": \"{{ item }}\", \"node_count\": \"{{ groups['db_servers'] | length }}\",\"remote_current_user\":\"{{ docker_container.env.user }}\", \"remote_current_password\":\"{{ docker_container.env.password }}\"}"
  loop: "{{ groups['db_servers'] | difference([ansible_default_ipv4.address]) }}"
  when: ansible_nodename == "node-1"

- name: Configure cluster - step 2
  ansible.builtin.uri:
    url: "http://{{ ansible_default_ipv4.address | string }}:5984/_cluster_setup"
    user: "{{ docker_container.env.user }}"
    password: "{{ docker_container.env.password }}"
    force_basic_auth : true
    method: POST
    status_code: [201, 409]
    body_format: json
    body:  "{\"action\": \"add_node\", \"host\":\"{{ item }}\",\"port\": \"5984\", \"username\": \"{{ docker_container.env.user }}\", \"password\":\"{{ docker_container.env.password }}\"}"
  loop: "{{ groups['db_servers'] | difference([ansible_default_ipv4.address]) }}"
  when: ansible_nodename == "node-1"

- name: Configure cluster - step 3
  ansible.builtin.uri:
    url: http://{{ ansible_default_ipv4.address | string }}:5984/_cluster_setup
    user: "{{ docker_container.env.user }}"
    password: "{{ docker_container.env.password }}"
    force_basic_auth : true
    method: POST
    status_code: [409,500]
    body_format: json
    body:  "{\"action\": \"finish_cluster\"}"
  when: ansible_nodename == "node-1"

- name: Add new nodes to the cluster
  ansible.builtin.uri:
    url: http://{{ ansible_default_ipv4.address | string }}:5984/_node/_local/_nodes/couchdb@{{ item }}
    user: "{{ docker_container.env.user }}"
    password: "{{ docker_container.env.password }}"
    force_basic_auth : true
    method: PUT
    status_code: [200,201,409,500]
    body_format: json
    body:  "{}"
  loop: "{{ groups['db_servers'] | difference([ansible_default_ipv4.address]) }}"
  when: ansible_nodename == "node-1"


