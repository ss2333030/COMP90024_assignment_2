- name: Check if the image already exists
  become: true
  community.docker.docker_image_info:
    name: "{{ docker_image.name }}"
  register: image_result

- name: Remove container
  become: true
  community.docker.docker_container:
    name: "{{ docker_container_name }}"
    state: absent
  when: image_result | length > 0

- name: Remove the old image
  become: true
  community.docker.docker_image:
    name: "{{ docker_image.name }}"
    state: absent
  when: image_result | length > 0

- name: Remove old docker volume
  become: true
  community.docker.docker_volume:
    name: "{{ docker_volume.name }}"
    state: absent

- name: Create a docker volume for the application
  become: true
  community.docker.docker_volume:
    name: "{{ docker_volume.name }}"
    state: present
  register: volume_result

- name: Print out debugging information
  ansible.builtin.debug:
    msg: "{{ volume_result }}"

- name: Build image using Dockerfile
  become: true
  community.docker.docker_image:
    name: "{{ docker_image.name }}"
    build:
      path: "{{ docker_image.path }}"
    source: build
    state: present

- name: Run Mastodon client container
  become: true
  community.docker.docker_container:
    name: "{{ docker_container_name }}"
    image: "{{ docker_image.name }}"
    mounts:
      - type: "{{ docker_volume.type }}"
        target: "{{ docker_volume.target }}"
        source: "{{ docker_volume.name }}"
    detach: true
    state: started
